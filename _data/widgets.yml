- name: Select
  dir_name: 'w-chz'
  description: |
    This input provides default select-like behavior.
    It allows to select only one item from predefined list
    or none of them. Supports several angular directives: <code>ng-model</code>,
    <code>ng-disabled</code>, <code>ng-required</code>.
    In <code>ng-model</code> it holds full object, not only value.
  options:
    - name: items
      required: true
      description: |
        Option used for setting items list on <code>w-chz</code>.
        Value in it should be a list of objects with two fields:
        <code>id</code> and <code>label</code>. They can be overriden by
        <code>key-attr</code> and <code>value-attr</code> options respiectively.
      example_html: |
        <form role='form' ng-controller='ChzItemsCtrl'>
          <div class='form-group'>
            <label>Select weapon:</label>
            <div w-chz items='weapons'></div>
          </div>
        </form>
      example_js: |
        angular.module('angular-w-demo')
        .controller('ChzItemsCtrl', function($scope) {
          $scope.weapons = [
            {id: 'katana', label: 'Long sword Katana'},
            {id: 'yuml', label: 'Longbow Yuml'},
            {id: 'yari', label: 'Spear Yari'}
          ];
        }
    - name: limit
      required: false
      description: |
        If it is set - limits number of items will be used.
      example_html: |
        <form role='form' ng-controller='ChzLimitsCtrl'>
          <div class='form-group'>
            <label>Select number of weapons:</label>
            <div w-chz items='numbers' ng-model='numberOfWeapons'></div>
          </div>
          <div class='form-group'>
            <label>Select weapon:</label>
            <div w-chz items='weapons' limit='numberOfWeapons.id'></div>
          </div>
        </form>
      example_js: |
        angular.module('angular-w-demo')
        .controller('ChzLimitsCtrl', function($scope) {
          $scope.numbers = [
            {id: 1, label: 1},
            {id: 2, label: 2},
            {id: 3, label: 3}
          ];
          $scope.weapons = [
            {id: 'katana', label: 'Long sword Katana'},
            {id: 'yuml', label: 'Longbow Yuml'},
            {id: 'yari', label: 'Spear Yari'}
          ];
        }
    - name: key-attr, value-attr
      required: false
      description: |
        Overrides default names of fields for id and label of item.
        Default values: <code>key-attr = 'id'</code>,
        <code>value-attr = 'label'</code>
      example_html: |
        <form role='form' ng-controller='ChzKeyValuesCtrl'>
          <div class='form-group'>
            <label>Select city of Japan:</label>
            <div w-chz items='cities' key-attr='code' value-attr='name'></div>
          </div>
        </form>
      example_js: |
        angular.module('angular-w-demo')
        .controller('ChzKeyValuesCtrl', function($scope) {
          $scope.cities = [
            {code: 'JP SPK', name: 'Sapporo'},
            {code: 'JP SDJ', name: 'Sendai'},
            {code: 'JP TYO', name: 'Tokyo'},
            {code: 'JP NGO', name: 'Nagoya'}
          ];
        }
    - name: Templating
      required: false
      description: |
        If some inner html is provided for directive tag,
        then those html will be used for rendering selected value.
        Selected item is accessible from templating by <code>item</code>
        variable. By default <code>item['label']</code> will be rendered or if
        <code>value-attr</code> is provided, then <code>item[value-attr]</code> will
        be used.
      example_html: |
        <form role='form' ng-controller='ChzKeyValuesCtrl'>
          <div class='form-group'>
            <label>Select city of Japan:</label>
            <div w-chz items='cities' key-attr='code' value-attr='name'></div>
          </div>
        </form>
      example_js: |
        angular.module('angular-w-demo')
        .controller('ChzKeyValuesCtrl', function($scope) {
          $scope.cities = [
            {code: 'JP SPK', name: 'Sapporo'},
            {code: 'JP SDJ', name: 'Sendai'},
            {code: 'JP TYO', name: 'Tokyo'},
            {code: 'JP NGO', name: 'Nagoya'}
          ];
        }
- name: Multiselect
  dir_name: 'w-multi-select'
  description: |
    MultiSelect allows to select multiple items from a predefined list of options.
    Supported angular directives and options are similar to Select.
  example_html: |
    <form role='form' ng-controller='MultiSelectCtrl'>
      <div class='form-group'>
        <label>Leisure Time:</label>
        <div w-multi-select items='games'>
          'none'
        </div>
      </div>
    </form>
  example_js: |
    angular.module('angular-w-demo')
    .controller('MultiSelectCtrl', ['$scope', function($scope) {
      $scope.games = [
        {id: 0, label: 'Dragon Quest'},
        {id: 1, label: 'Final Fantasy'},
        {id: 2, label: 'Shin Megami Tensei'}
      ];
    }]);
- name: Combo
  dir_name: 'w-combo'
  description: |
    Combo provides basic combo behavior.
    It allows to select a value from a predefined list or to enter custom value.
    Only primitive types are supported as predefined values.
    Supports several angular directives: <code>ng-model</code>,
    <code>ng-disabled</code>, <code>ng-required</code>.
    Available options are <code>items</code> and <code>limit</code>.
  example_html: |
    <form role="form" ng-controller='ComboCtrl'>
      <div class="form-group">
        <label>Choose your element</label>
        <div w-combo="true" items="items" ng-model="value"></div>
      </div>
    </form>
  example_js: |
    angular.module('angular-w-demo')
    .controller('ComboCtrl', function($scope) {
      $scope.items = [ 'earth', 'water', 'fire', 'wind', 'void' ];
    });
- name: Tags
  dir_name: 'w-tags'
  description: |
    Tags allows to select multiple values from a predefined
    list or to enter custom values. Only primitive types are
    supported as predefined values. Supports several angular
    directives: <code>ng-model</code>, <code>ng-disabled</code>,
    <code>ng-required</code>. Available options are <code>items</code>
    and <code>limit</code>. Attributes: <code>items</code> and <code>limit</code>.
  example_html: |
    <form role="form" ng-controller='TagsCtrl'>
      <div class="form-group">
        <label>Choose your element</label>
        <div w-tags="true"
             items="items"
             limit='20'
             ng-model="value"></div>
      </div>
    </form>
  example_js: |
    angular.module('angular-w-demo')
    .controller('TagsCtrl', function($scope) {
      $scope.items = [ 'earth', 'water', 'fire', 'wind', 'void' ];
    });
- name: Radio
  dir_name: 'w-radio'
  description: |
    Provides default radio-like behaviour. Supports several
    angular directives: <code>ng-model</code>, <code>ng-disabled</code>,
    <code>ng-required</code>. Available option is <code>items</code>.
  example_html: |
    <form role="form" ng-controller='RadioCtrl'>
      <div class="form-group">
        <label>Choose your katawari</label>
        <div w-radio="true"
             items="items"
             ng-model="value"></div>
      </div>
    </form>
  example_js: |
    angular.module('angular-w-demo')
    .controller('RadioCtrl', function($scope) {
      $scope.items = [
        {id: 'S', label: 'Shijima'},
        {id: 'M', label: 'Musubi'},
        {id: 'Y', label: 'Yosuga'}
      ];
    });
- name: Checkbox
  dir_name: 'w-checkbox'
  description: |
    Provides default checkbox-like behaviour. Supports several
    angular directives: <code>ng-model</code>, <code>ng-disabled</code>,
    <code>ng-required</code>. Available option is <code>items</code>.
  example_html: |
    <form role="form" ng-controller='CheckboxCtrl'>
      <div class="form-group">
        <label>What would you like to drink?</label>
        <div w-checkbox="true"
             items="items"
             limit='20'
             ng-model="value"></div>
      </div>
    </form>
  example_js: |
    angular.module('angular-w-demo')
    .controller('CheckboxCtrl', function($scope) {
      $scope.items = [
        {id: 'S', label: 'Shijima'},
        {id: 'M', label: 'Musubi'},
        {id: 'Y', label: 'Yosuga'}
      ];
    });
